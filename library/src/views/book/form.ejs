<form method="POST" class="mt-5" id="update-form">
  <div class="form-group">
      <label for="inputTitle">Название</label>
      <input type="text"
             value="<%= book.title %>"
             name="title"
             class="form-control"
             id="inputTitle">
  </div>

  <div class="form-group">
    <label for="inputDesc">Описание</label>
    <textarea
            rows="3"
            name="desc"
            class="form-control"
            id="inputDesc"
    ><%= book.description %></textarea>
  </div>

  <div class="form-group">
    <label for="inputAuthors">Авторы</label>
    <input type="text"
           value="<%= book.authors %>"
           name="authors"
           class="form-control"
           id="inputAuthors">
  </div>

  <div class="form-check form-check-inline">
    <input type="checkbox"
           name="favorite"
           class="form-check-input"
           id="inputFavorite">
    <label for="inputFavorite">Избранное</label>
  </div>

  <div class="form-group">
    <label for="cover">Обложка</label>
    <input type="file" class="form-control-file" id="cover" name="fileCover">
  </div>

  <div class="form-group">
    <label for="fileBook">Файл книги</label>
    <input type="file" class="form-control-file" id="fileBook" name="fileBook">
  </div>

  <input type="hidden" id="fileName" name="fileName" value="<%= book.fileName %>" />
  <input type="hidden" id="fileBookName" name="fileBookName" value="<%= book.fileBook %>" />

  <div class="form-group text-right ">
      <button type="submit" class="btn btn-primary">Сохранить</button>
  </div>
</form>
<script>
  const form = document.getElementById('update-form');
  const favorite = form.querySelector('[name="favorite"]');
  if ('<%= book.favorite %>' === 'true') {
    favorite.checked = true;
  }

  const updateBook = (event) => {
    event.preventDefault();

    const title = form.querySelector('[name="title"]').value;
    const desc = form.querySelector('[name="desc"]').value;
    const authors = form.querySelector('[name="authors"]').value;
    const favorite = form.querySelector('[name="favorite"]').checked;
    const fileCover = form.querySelector('[name="fileCover"]').value;
    const fileName = form.querySelector('[name="fileName"]').value;
    const fileBookName = form.querySelector('[name="fileBookName"]').value;
    const fileBook = form.querySelector('[name="fileBook"]').files[0];

    const fileBookFormData = new FormData();
    fileBookFormData.append('book-file', fileBook);

    const changeBook = (fileBook) => {
      if ('<%= method %>' === 'POST') {
          return fetch('/api/books', {
          method: 'POST',
          body: JSON.stringify({
            title,
            description: desc,
            authors,
            favorite,
            fileCover,
            fileName,
            fileBook
          }),
          headers: {
            'Content-Type': 'application/json'
          }
        })
      } else {
          return fetch('/api/books/<%= book.id %>', {
          method: 'PUT',
          body: JSON.stringify({
            title,
            description: desc,
            authors,
            favorite,
            fileCover,
            fileName,
            fileBook
          }),
          headers: {
            'Content-Type': 'application/json'
          }
        })
      }
    }

    if (fileBook) {
      fetch('/api/books/upload-file', {
      method: 'POST',
      body: fileBookFormData
    })
      .then(response => response.json())
      .then(data => {
        return changeBook(data.filename);
      })
      .then(response => response.json())
      .then(data => {
        window.location.replace(`/views/books/view/${data.id}`);
      });
    } else {
      changeBook(fileBookName)
        .then(response => response.json())
        .then(data => {
          window.location.replace(`/views/books/view/${data.id}`);
      });
    }
  }


  form.addEventListener('submit', updateBook);
</script>